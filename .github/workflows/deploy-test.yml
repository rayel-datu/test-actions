name: Deploy Test

on:
  push:
    branches:
      - feature/* # Only trigger when commits are pushed

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Fetch full history
        run: |
          git fetch --prune --unshallow

      - name: Check for actual commits
        run: |
          git fetch --prune origin

          # List all remote branches dynamically
          PARENT_BRANCH=$(git for-each-ref --format='%(refname:short)' refs/remotes/origin | sed 's|^refs/remotes/origin/||' | xargs -I {} git merge-base origin/${{ github.ref_name }} origin/{} | xargs -I {} git name-rev --name-only {} || echo "Unknown")

          echo "Detected Parent Branch: $PARENT_BRANCH"

          # Count commits excluding inherited history from parent branch
          if [ "$PARENT_BRANCH" != "Unknown" ]; then
            COMMIT_COUNT=$(git rev-list --count origin/${{ github.ref_name }} ^origin/$PARENT_BRANCH)
          else
            COMMIT_COUNT=$(git rev-list --count origin/${{ github.ref_name }})
          fi

          echo "Commit Count for ${{ github.ref_name }} (excluding parent branch $PARENT_BRANCH): $COMMIT_COUNT"

          if [ "$COMMIT_COUNT" -le 1 ]; then
            echo "Initial branch push detectedâ€”skipping deployment."
            exit 0
          fi


      - name: Extract Version from pubspec.yaml
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping checkout step."
            exit 0
          fi
            VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
            echo "VERSION=$VERSION" >> $GITHUB_ENV  # Stores version in environment

      - name: Identify triggering branch
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          CURRENT_BRANCH=$(echo $GITHUB_REF | sed -E 's|refs/heads/||')
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV

      - name: Checkout triggering branch
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          git checkout $CURRENT_BRANCH

      - name: Create and switch to release-test branch
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          git tag release-test/$VERSION
          git push origin release-test/$VERSION

      - name: Deploy release-test
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          echo "Deploying release-test/$VERSION..."
          # Add deployment steps here
