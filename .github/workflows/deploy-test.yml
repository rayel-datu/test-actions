name: Deploy Test

on:
  push:
    branches:
      - feature/* # Only trigger when commits are pushed

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Fetch full history
        run: |
          git fetch --prune --unshallow

      - name: Check for actual commits
        run: |
          git fetch --prune origin

          # Check if the branch already exists remotely
          BRANCH_EXISTS=$(git ls-remote --heads origin "${{ github.ref_name }}" | wc -l)

          if [ "$BRANCH_EXISTS" -eq 0 ]; then
            echo "Branch '${{ github.ref_name }}' is new—skipping deployment."
            exit 0
          fi

          # Count only new commits on the feature branch
          COMMIT_COUNT=$(git rev-list --count origin/${{ github.ref_name }} ^origin/main)

          echo "Commit Count for ${{ github.ref_name }}: $COMMIT_COUNT"

          if [ "$COMMIT_COUNT" -le 1 ]; then
            echo "SKIP_DEPLOYMENT=true" >> $GITHUB_ENV
            echo "Initial branch push detected—skipping deployment."
            exit 0
          fi

      - name: Extract Version from pubspec.yaml
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping checkout step."
            exit 0
          fi
            VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
            echo "VERSION=$VERSION" >> $GITHUB_ENV  # Stores version in environment

      - name: Identify triggering branch
        run: |
          echo "SKIP_DEPLOYMENT: $SKIP_DEPLOYMENT"
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          CURRENT_BRANCH=$(echo $GITHUB_REF | sed -E 's|refs/heads/||')
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV

      - name: Checkout triggering branch
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          git checkout $CURRENT_BRANCH

      - name: Create and switch to release-test branch
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          git tag release-test/$VERSION
          git push origin release-test/$VERSION

      - name: Deploy release-test
        run: |
          if [[ "$SKIP_DEPLOYMENT" == "true" ]]; then
            echo "Skipping this step."
            exit 0
          fi
          echo "Deploying release-test/$VERSION..."
          # Add deployment steps here
